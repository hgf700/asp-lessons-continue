@model IEnumerable<aspapp.Models.VM.TripViewModel>
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> UserManager
@inject SignInManager<IdentityUser> SignInManager
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Trip List";
    var user = HttpContextAccessor.HttpContext?.User;
    bool isAdmin = user != null && user.IsInRole("Admin");
}

<h1>Trip List</h1>

<p>
    <a href="@Url.Action("Create", "Trip")" class="btn btn-primary">Create New Trip</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Destination</th>
            <th>Start Date</th>
            <th>Guide</th>
            <th>Traveler</th>
            @if (isAdmin)
            {
                <th>Admin Actions</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var trip in Model)
        {
            <tr>
                <td>@trip.Destination</td>
                <td>@trip.StartDate.ToShortDateString()</td>
                <td>
                    @* Zakładam, że masz w VM kolekcję Guides, z której możesz wyciągnąć imię i nazwisko po GuideId *@
                    @{
                        var guide = trip.Guides?.FirstOrDefault(g => g.GuideId == trip.GuideId);
                    }
                    @if (guide != null)
                    {
                        @guide.Firstname @guide.Lastname
                    }
                    else
                    {
                        <em>No Guide</em>
                    }
                </td>
                <td>
                    @if (trip.Travelers != null && trip.Travelers.Any())
                    {
                        foreach (var traveler in trip.Travelers)
                        {
                            <div>@traveler.Firstname @traveler.Lastname</div>
                        }
                    }
                    else
                    {
                        <em>No Travelers</em>
                    }
                </td>
                <td>
                    <a href="@Url.Action("Edit", "Trip", new { id = trip.TripId })" class="btn btn-warning btn-sm">Edit</a>
                </td>
                @if (isAdmin)
                {
                    <td>
                        <a href="@Url.Action("Delete", "Trip", new { id = trip.TripId })" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                }
            </tr>
        }
    </tbody>
</table>

<a href="@Url.Action("Index", "Home")" class="btn btn-secondary">Home</a>
